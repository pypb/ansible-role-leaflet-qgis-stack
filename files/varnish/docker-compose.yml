---
# Ansible managed
services:
  varnish:
    image: varnish:${VARNISH_TAG}
    restart: unless-stopped
    environment:
      TZ: ${TZ}
      VARNISH_SIZE: ${VARNISH_SIZE}
    volumes:
      - ./conf/varnish:/etc/varnish:ro
    tmpfs:
      - /var/lib/varnish/varnishd:exec,mode=777
    networks:
      - default
      - revproxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.varnish_${PROJ_PREFIX}.rule=(Host(`${MAIN_HOST}`) || Host(`${ALT_HOST}`)) || (Host(`${MAP_HOST_1}`) || Host(`${MAP_HOST_2}`) || Host(`${MAP_HOST_3}`) || Host(`${MAP_HOST_4}`)) && Method(`GET`) && PathPrefix(`/tiles`)"
      - "traefik.http.routers.varnish_${PROJ_PREFIX}.tls=true"
      - "traefik.http.routers.varnish_${PROJ_PREFIX}.tls.certresolver=letsencrypt"
      - "traefik.http.routers.varnish_${PROJ_PREFIX}.middlewares=varnish_${PROJ_PREFIX},varnish_${PROJ_PREFIX}_alt_to_main"
      - "traefik.http.services.varnish_${PROJ_PREFIX}.loadbalancer.server.port=80"
      - "traefik.http.middlewares.varnish_${PROJ_PREFIX}.headers.contenttypenosniff=true"
      - "traefik.http.middlewares.varnish_${PROJ_PREFIX}.headers.custombrowserxssvalue=0"
      - "traefik.http.middlewares.varnish_${PROJ_PREFIX}.headers.framedeny=true"
      - "traefik.http.middlewares.varnish_${PROJ_PREFIX}_alt_to_main.redirectregex.permanent=true"
      - "traefik.http.middlewares.varnish_${PROJ_PREFIX}_alt_to_main.redirectregex.regex=^https://${ALT_HOST}/(.*)"
      - "traefik.http.middlewares.varnish_${PROJ_PREFIX}_alt_to_main.redirectregex.replacement=https://${MAIN_HOST}/$${1}"
      - "traefik.docker.network=${REVPROXY_NETWORK_NAME}"

networks:
  revproxy:
    external: true
    name: ${REVPROXY_NETWORK_NAME}
